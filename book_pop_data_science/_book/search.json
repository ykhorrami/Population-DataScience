[
  {
    "objectID": "intro.html#background",
    "href": "intro.html#background",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.1 Background",
    "text": "1.1 Background\nIn this section, we delve into the basics of Python for Data Science. Python is a simple yet powerful programming language that has utility in web development, scientific computing, data science and machine learning. For a start, there are two versions of Python; Python version 2 and Python version 3. In this course, we work exclusively with Python version 3. Moreover, our interest in this section is the use of Python for data analysis. Let us first install Python."
  },
  {
    "objectID": "intro.html#installing-python",
    "href": "intro.html#installing-python",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.2 Installing Python",
    "text": "1.2 Installing Python\nThe installation of Python will differ slightly depending on the operating system; Windows, Mac, and Linux. The site https://www.python.org/downloads/ contains the Python executables for each operating system. ASt the time of writing this book, the Python version release is Python 3.11.5. However, installation procedures do not change much. The internet is full of tutorials on the installation of Python. In this book, we refer the reader to the available installation guidelines.\n\n1.2.1 Installing Python on Windows\nMicrosoft has a comprehensive set of installation procedures for installing Python on Windows available on this website https://learn.microsoft.com/en-us/windows/python/beginners. Microsoft recommends the installation of Python from the Microsoft Store. We also recommend this approach because it will save you from the complications of setting the Python path. The link also contains information about the installation of VS Code, a popular text editor for writing Python code. We recommend that you also install VS Code.\nIf you choose to download and install Python directly from the Python Website, ensure that you set the path correctly. Specifically, when installing Python, ensure that you tick the choice Add Python to Path in the installation dialogue box (See Figure 1.1).\n\n\n\nAdd Python to Path\n\n\n\n\n1.2.2 Installing Python on Mac OS\nWe refer the reader to the following website https://www.makeuseof.com/how-to-install-python-on-mac/ for instructions on installing Python on Mac OS. We spewcifically point you to the section titled “How to Install Python With the Official Installer” as it offers a simpler and direct way to install Python on Mac OS. We also recomend that the readers install VS Code by following instructions on this site https://code.visualstudio.com/docs/setup/mac.\n\n\n1.2.3 Installing Python on Linux\nMost linux distributions come with linux pre-installed. For instance, Ubuntu comes with the latest Linux 3 release installed. To check the version of Python on Linux, open the terminal and run the following command.\npython3 --version\nTo install VS Code, follow the instructions on this link https://code.visualstudio.com/docs/setup/linux."
  },
  {
    "objectID": "intro.html#popular-python-text-editors-and-interactive-development-environments-ides.",
    "href": "intro.html#popular-python-text-editors-and-interactive-development-environments-ides.",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.3 Popular Python Text Editors and Interactive Development Environments (IDEs).",
    "text": "1.3 Popular Python Text Editors and Interactive Development Environments (IDEs).\nThere are numerous popular IDEs and text editors for use with Python. The most popular IDE is pycharm. Pycharm comes in two flavors, the professional edition and the community edition. The community edition has reduced functionality compared to the professional edition.\nThe most popular text editor for Python is VS Code. VS Code is free to download and use. This is our editor of choice iin this book. Our choice of VS Code is out of our personal preference. You can follow the contents of this book while using other platforms like Sublime text, Jupyter notebooks, among others."
  },
  {
    "objectID": "intro.html#setting-up-vs-code-for-python-programming",
    "href": "intro.html#setting-up-vs-code-for-python-programming",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.4 Setting up VS Code for Python Programming",
    "text": "1.4 Setting up VS Code for Python Programming\nVS Code is a text editor. To make VS Code work with Python (and other programming languages), we need to install appropriate VS Code extensions. In our case, we install the following VS Code extensions.\n\nPython.\nJupyter\nCode Runner.\nQuarto\nPrettier.\n\nLet us illustrate how to install the Python extension.\n\nFirst, open the Extensions view (Ctrl+Shift+X).\nFilter the extension list by typing ‘python’.\nClick on the Python extension (Verify that it the extensions is created by Microsoft).\nFinally, Install the extension (See Figure 2 and 3 below).\n\n\n\n\nOpen the extensions panel\n\n\n\n\n\nInstall the Python extension\n\n\nYou can follow the same procedure to install the other extensions."
  },
  {
    "objectID": "intro.html#installing-python-packages",
    "href": "intro.html#installing-python-packages",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.5 Installing Python Packages",
    "text": "1.5 Installing Python Packages"
  },
  {
    "objectID": "intro.html#loading-data-into-python",
    "href": "intro.html#loading-data-into-python",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.6 Loading Data into Python",
    "text": "1.6 Loading Data into Python\nWe shall work with data from the United Nations Population Department (UNPD) to illustrate data analysis in Python. The data consists of population and life expectancy estimates and is available in the following website: https://population.un.org/wpp/Download/Standard/MostUsed/.\nThe first step in analyzing data in Python is to load the standard libraries: pandas for importing files, matplotlib and seaborn for data visualization, and numpy for mathematical operations. When importing the libraries, it is common, though not neccesary to alias the packages (like pd for pandas and plt for matplotlib.pyplot). This convention makes it easy to reference the libraries when writing code. Not that you could use any other alias. However, in the Python community, pandas is usually aliased as pd. The same is the case for the other libraries.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\nWe start by importing the data using pandas. Pandas has many handy functions for importing data in variuous formats. Given that our data is in Ms Excel format, we use the pd.read_excel() function to import the data.\nThe pd.read_excel() webpage details the numerous arguments that we could supply to the function. To keep things simple, we will just supply the file path. The data is in the first sheet of the excel workbook and has column names as the first row. Hence, we stick with the default arguments; sheet_name=0, and header=0. Note that we could also supply a list of alterantive column names to the names parameter. For now, we leave the names parameter to the default of none.\n\npopulation = pd.read_excel(\"data/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_COMPACT_REV1.xlsx\")"
  },
  {
    "objectID": "intro.html#exploring-data-in-python",
    "href": "intro.html#exploring-data-in-python",
    "title": "1  Introduction to Python for Data Science",
    "section": "1.7 Exploring Data in Python",
    "text": "1.7 Exploring Data in Python\nThe head method allows us to view the first 5 rows of the data table by default. In the example below, we specify that we want to display the first 3 rows instead.\n\npopulation.head(3)\n\n\n\n\n\n\n\n\nindex\nvariant\nregion_subregion_country_area\nnotes\nlocation_code\nISO3_code\nISO2_code\nSDMX_code\ntype\nparent_code\n...\nmale_mortality_before_age_60_deaths_per_1000_male_births\nfemale_mortality_before_age_60_deaths_per_1000_female_births\nmortality_age_15_50_both_sexes_deaths_under50_per_1000_alive_at_15\nmale_mortality_age_15_50_deaths_under50_per_1000_male_alive_at_15\nfemale_mortality_age_15_50_deaths_under50_per_1000_female_alive_at_15\nmortality_age_15_60_both_sexes_deaths_under60_per_1000_alive_at_15\nmale_mortality_age_15_60_deaths_under60_per_1000_male_alive_at_15\nfemale_mortality_age_15_60_deaths_under60_per_1000_female_alive_at_15\nnet_migrants_000\nnet_migration_per_1000\n\n\n\n\n0\n1\nEstimates\nWORLD\nNaN\n900\nNaN\nNaN\n1.0\nWorld\n0\n...\n580.75\n498.04\n240.316\n271.625\n208.192\n378.697\n430.259\n324.931\n0\n0\n\n\n1\n2\nEstimates\nWORLD\nNaN\n900\nNaN\nNaN\n1.0\nWorld\n0\n...\n566.728\n490.199\n231.177\n258.09\n203.78\n368.319\n415.836\n319.336\n0\n0\n\n\n2\n3\nEstimates\nWORLD\nNaN\n900\nNaN\nNaN\n1.0\nWorld\n0\n...\n546.317\n477.264\n218.674\n240.034\n197.142\n353.055\n395.533\n309.91\n0\n0\n\n\n\n\n3 rows × 65 columns\n\n\n\nWe can do the same using the tail method to view the last few rows of the data table.\n\npopulation.tail()\n\n\n\n\n\n\n\n\nindex\nvariant\nregion_subregion_country_area\nnotes\nlocation_code\nISO3_code\nISO2_code\nSDMX_code\ntype\nparent_code\n...\nmale_mortality_before_age_60_deaths_per_1000_male_births\nfemale_mortality_before_age_60_deaths_per_1000_female_births\nmortality_age_15_50_both_sexes_deaths_under50_per_1000_alive_at_15\nmale_mortality_age_15_50_deaths_under50_per_1000_male_alive_at_15\nfemale_mortality_age_15_50_deaths_under50_per_1000_female_alive_at_15\nmortality_age_15_60_both_sexes_deaths_under60_per_1000_alive_at_15\nmale_mortality_age_15_60_deaths_under60_per_1000_male_alive_at_15\nfemale_mortality_age_15_60_deaths_under60_per_1000_female_alive_at_15\nnet_migrants_000\nnet_migration_per_1000\n\n\n\n\n20591\n20592\nEstimates\nWallis and Futuna Islands\n2\n876\nWLF\nWF\n876.0\nCountry/Area\n957\n...\n92.066\n102.718\n30.643\n26.781\n33.892\n82.852\n82.197\n83.32\n-0.201\n-16.706\n\n\n20592\n20593\nEstimates\nWallis and Futuna Islands\n2\n876\nWLF\nWF\n876.0\nCountry/Area\n957\n...\n99.196\n89.345\n29.201\n29.159\n29.17\n79.633\n88.556\n72.163\n-0.171\n-14.368\n\n\n20593\n20594\nEstimates\nWallis and Futuna Islands\n2\n876\nWLF\nWF\n876.0\nCountry/Area\n957\n...\n77.781\n80.136\n24.304\n22.291\n25.981\n66.639\n69.324\n64.496\n-0.171\n-14.489\n\n\n20594\n20595\nEstimates\nWallis and Futuna Islands\n2\n876\nWLF\nWF\n876.0\nCountry/Area\n957\n...\n85.608\n86.364\n26.572\n24.691\n28.127\n72.73\n76.411\n69.685\n-0.083\n-7.096\n\n\n20595\n20596\nEstimates\nWallis and Futuna Islands\n2\n876\nWLF\nWF\n876.0\nCountry/Area\n957\n...\n89.321\n84.68\n25.848\n24.836\n26.644\n74.207\n80.373\n68.905\n-0.083\n-7.112\n\n\n\n\n5 rows × 65 columns\n\n\n\nLet us look at the number of rows and columns of the data by calling the shape attribute.\n\npopulation.shape\n\n(20596, 65)\n\n\nThe info() method allows us to have an overview of the data incluyding the column names and data types.\n\npopulation.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20596 entries, 0 to 20595\nData columns (total 65 columns):\n #   Column                                                                 Non-Null Count  Dtype  \n---  ------                                                                 --------------  -----  \n 0   index                                                                  20596 non-null  int64  \n 1   variant                                                                20596 non-null  object \n 2   region_subregion_country_area                                          20596 non-null  object \n 3   notes                                                                  5475 non-null   object \n 4   location_code                                                          20596 non-null  int64  \n 5   ISO3_code                                                              17064 non-null  object \n 6   ISO2_code                                                              16992 non-null  object \n 7   SDMX_code                                                              20304 non-null  float64\n 8   type                                                                   20596 non-null  object \n 9   parent_code                                                            20596 non-null  int64  \n 10  year                                                                   20592 non-null  float64\n 11  total_pop_jan1_000                                                     20596 non-null  object \n 12  total_pop_july1_000                                                    20596 non-null  object \n 13  male_pop_july1_000                                                     20596 non-null  object \n 14  female_pop_july1_000                                                   20596 non-null  object \n 15  pop_density_july1_sqkm                                                 20596 non-null  object \n 16  pop_sex_ratio_july_males_per_100_females                               20596 non-null  object \n 17  median_age_july1_years                                                 20596 non-null  object \n 18  natural_change_births_minus_deaths_000                                 20596 non-null  object \n 19  natural_change_births_minus_deaths_per_000                             20596 non-null  object \n 20  pop_change_000                                                         20596 non-null  object \n 21  pop_growth_rate _percentage                                            20596 non-null  object \n 22  Pop_annual_doubling_years                                              20596 non-null  object \n 23  Births_000                                                             20596 non-null  object \n 24  births_women_15_19_000                                                 20596 non-null  object \n 25  crude_birth_rate_per_000                                               20596 non-null  object \n 26  total_fertility_rate_live_births_per_woman                             20596 non-null  object \n 27  net_reproduction_rate_surviving_daughters_per_woman                    20596 non-null  object \n 28  mean_age_childbearing_years                                            20596 non-null  object \n 29  sex_ratio_at_birth_males_per_100_female_births                         20596 non-null  object \n 30  total_deaths_thousands                                                 20596 non-null  object \n 31  male_deaths_thousands                                                  20596 non-null  object \n 32  female_deaths_thousands                                                20596 non-null  object \n 33  crude_death_rate_deaths_per_1000_population                            20596 non-null  object \n 34  life_expectancy_at_birth_both_sexes                                    20596 non-null  object \n 35  male_life_expectancy_at_birth                                          20596 non-null  object \n 36  female_life_expectancy_at_birth                                        20596 non-null  object \n 37  life_expectancy_at_15_both_sexes                                       20596 non-null  object \n 38  male_life_expectancy_at_15                                             20596 non-null  object \n 39  female_life_expectancy_at_15                                           20596 non-null  object \n 40  life_expectancy_at_65_both_sexes                                       20596 non-null  object \n 41  male_life_expectancy_at_65                                             20596 non-null  object \n 42  female_life_expectancy_at_65                                           20596 non-null  object \n 43  life_expectancy_at_80_both_sexes                                       20596 non-null  object \n 44  male_life_expectancy_at_80                                             20596 non-null  object \n 45  female_life_expectancy_at_80                                           20596 non-null  object \n 46  infant_deaths_under_age_1_thousands                                    20596 non-null  object \n 47  infant_mortality_rate_infant_deaths_per_1000_live_births               20596 non-null  object \n 48  live_birth_surviving_to_age1 _thousands                                20596 non-null  object \n 49  under_five_deaths_under_age5_thousands                                 20596 non-null  object \n 50  under_five_mortality_deaths_under_age5_per_1000_live_births            20596 non-null  object \n 51  mortality_before_age_40_both_sexes_deaths_per_1000_live_births         20596 non-null  object \n 52  male_mortality_before_age_40_deaths_per_1000_male_births               20596 non-null  object \n 53  female_mortality_before_age_40_deaths_per_1000_female_births           20596 non-null  object \n 54  mortality_before_age_60_both_sexes_deaths_per_1000_live_births         20596 non-null  object \n 55  male_mortality_before_age_60_deaths_per_1000_male_births               20596 non-null  object \n 56  female_mortality_before_age_60_deaths_per_1000_female_births           20596 non-null  object \n 57  mortality_age_15_50_both_sexes_deaths_under50_per_1000_alive_at_15     20596 non-null  object \n 58  male_mortality_age_15_50_deaths_under50_per_1000_male_alive_at_15      20596 non-null  object \n 59  female_mortality_age_15_50_deaths_under50_per_1000_female_alive_at_15  20596 non-null  object \n 60  mortality_age_15_60_both_sexes_deaths_under60_per_1000_alive_at_15     20596 non-null  object \n 61  male_mortality_age_15_60_deaths_under60_per_1000_male_alive_at_15      20596 non-null  object \n 62  female_mortality_age_15_60_deaths_under60_per_1000_female_alive_at_15  20596 non-null  object \n 63  net_migrants_000                                                       20596 non-null  object \n 64  net_migration_per_1000                                                 20596 non-null  object \ndtypes: float64(2), int64(3), object(60)\nmemory usage: 10.2+ MB\n\n\n\npopulation.describe(include=\"float64\")\n\n\n\n\n\n\n\n\nSDMX_code\nyear\n\n\n\n\ncount\n20304.000000\n20592.00000\n\n\nmean\n410.088652\n1985.50000\n\n\nstd\n268.841860\n20.78311\n\n\nmin\n1.000000\n1950.00000\n\n\n25%\n158.000000\n1967.75000\n\n\n50%\n415.500000\n1985.50000\n\n\n75%\n643.000000\n2003.25000\n\n\nmax\n914.000000\n2021.00000\n\n\n\n\n\n\n\n\npopulation.describe(include=\"object\")\n\n\n\n\n\n\n\n\nvariant\nregion_subregion_country_area\nnotes\nISO3_code\nISO2_code\ntype\ntotal_pop_jan1_000\ntotal_pop_july1_000\nmale_pop_july1_000\nfemale_pop_july1_000\n...\nmale_mortality_before_age_60_deaths_per_1000_male_births\nfemale_mortality_before_age_60_deaths_per_1000_female_births\nmortality_age_15_50_both_sexes_deaths_under50_per_1000_alive_at_15\nmale_mortality_age_15_50_deaths_under50_per_1000_male_alive_at_15\nfemale_mortality_age_15_50_deaths_under50_per_1000_female_alive_at_15\nmortality_age_15_60_both_sexes_deaths_under60_per_1000_alive_at_15\nmale_mortality_age_15_60_deaths_under60_per_1000_male_alive_at_15\nfemale_mortality_age_15_60_deaths_under60_per_1000_female_alive_at_15\nnet_migrants_000\nnet_migration_per_1000\n\n\n\n\ncount\n20596\n20596\n5475\n17064\n16992\n20596\n20596\n20596\n20596\n20596\n...\n20596\n20596\n20596\n20596\n20596\n20596\n20596\n20596\n20596\n20596\n\n\nunique\n1\n289\n46\n237\n236\n9\n20337\n20340\n20156\n20152\n...\n19966\n19893\n19575\n19530\n19191\n19848\n19825\n19682\n15838\n12811\n\n\ntop\nEstimates\nAustralia/New Zealand\n2\nBDI\nBI\nCountry/Area\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n0\n0\n\n\nfreq\n20596\n144\n792\n72\n72\n17064\n4\n4\n76\n76\n...\n76\n76\n76\n76\n76\n76\n76\n76\n578\n578\n\n\n\n\n4 rows × 60 columns"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  }
]